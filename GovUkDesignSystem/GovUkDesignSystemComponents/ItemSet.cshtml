@using GovUkDesignSystem.GovUkDesignSystemComponents
@model GovUkDesignSystem.GovUkDesignSystemComponents.ItemSetViewModel

@{
    string idPrefix = Model.IdPrefix ?? Model.Name;
    string errorId = Model.ErrorMessage != null ? idPrefix + "-error" : null;
    string hintId = Model.Hint != null ? idPrefix + "-hint" : null;
    bool isConditional = Model.Items.Exists(item => item.Conditional != null);

    Func<object, object> innerHtml =
        @<text>
            <div class="govuk-form-group @( Model.FormGroup?.Classes) @( Html.Raw(Model.ErrorMessage != null ? "govuk-form-group--error" : ""))">
                @{
                    if (Model.Hint != null)
                    {
                        Model.Hint.Id = hintId;
                        await Html.RenderPartialAsync("/GovUkDesignSystemComponents/Hint.cshtml", Model.Hint);
                    }
                    if (Model.ErrorMessage != null)
                    {
                        Model.ErrorMessage.Id = errorId;
                        await Html.RenderPartialAsync("/GovUkDesignSystemComponents/ErrorMessage.cshtml", Model.ErrorMessage);
                    }
                }

                <div class="@( Model.StyleNamePrefix) @( Model.Classes) @( Html.Raw(isConditional ? $"{Model.StyleNamePrefix}--conditional" : ""))"
                     @( Html.Raw(isConditional ? $"data-module={Model.StyleNamePrefix}" : ""))
                     @( Html.Raw(Model.Attributes != null ? string.Join(" ", Model.Attributes.Select(a => a.Key + "=\"" + a.Value + "\"")) : ""))>
                    @for (var index = 0; index < Model.Items.Count; index++)
                    {
                        ItemViewModel currentItem = Model.Items[index];
                        if (currentItem.Id == null)
                        {
                            currentItem.Id = idPrefix + "-" + index;
                        }
                        currentItem.Name = Model.Name;
                        await Html.RenderPartialAsync(Model.ItemDesignFileName, currentItem);
                    }
                </div>
            </div>
         </text>;

    if (Model.Fieldset != null)
    {
        Model.Fieldset.InnerHtml = innerHtml;
        Model.Fieldset.DescribedBy = Model.Fieldset.DescribedBy + errorId + hintId;
        await Html.RenderPartialAsync("/GovUkDesignSystemComponents/Fieldset.cshtml", Model.Fieldset);
    }
    else
    {
        <div>@innerHtml(new object())</div>
    }
}